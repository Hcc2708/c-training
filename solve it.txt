class Solution {
public:
    int maxSubarraySumCircular(vector<int>& nums) {
        int n = nums.size();
        int maxSum = nums[0];
        int sum = 0;
        int index = -1;
            for(int j = 0; j<n; j++)
            {
                sum += nums[j];
                if(sum>maxSum)
                maxSum = sum;
                if(sum<0)
                {index = j;
                sum = 0;}
            }
            if(index == -1)
            for(int i = 0; i<n-1; i++)
            {
                sum -= nums[i];
                if(sum>maxSum)
                maxSum = sum;
                sum += nums[i];
                if(sum<0)
                sum = 0;
            }
            else 
            for(int i = 0; i<n-1; i++)
            {
                if(i<=index)
                {sum += nums[i];
                if(sum > maxSum)
                maxSum = sum;
                if(sum <0)
                sum = 0;
                }
                else
                {
                    sum -= nums[i];
                if(sum>maxSum)
                maxSum = sum;
                sum += nums[i];
                if(sum<0)
                sum = 0;
                }
                
            }
        
        return maxSum;
    }
};